

#include "wet.h"

void wet::setwallnodes()
{

	gamma0 = t0*(1.0 - 1.5*(u[k][0]*u[k][0] + u[k][1]*u[k][1] + u[k][2]*u[k][2]));
  
  gamma1 = t1*(1.0 + 3.0*u[k][0] + 3.0*u[k][0]*u[k][0] - 1.5*u[k][1]*u[k][1] - 1.5*u[k][2]*u[k][2]);
  
  gamma3 = t1*(1.0+3.0*u[k][1]+3.0*u[k][1]*u[k][1]-1.5*u[k][0]*u[k][0] - 1.5*u[k][2]*u[k][2]);
  
  gamma2 = t1*(1.0-3.0*u[k][0]+3.0*u[k][0]*u[k][0]-1.5*u[k][1]*u[k][1] - 1.5*u[k][2]*u[k][2]);
  
  gamma4 = t1*(1.0-3.0*u[k][1]+3.0*u[k][1]*u[k][1]-1.5*u[k][0]*u[k][0] - 1.5*u[k][2]*u[k][2]);
  
  gamma5 = t1*(1.0 + 3.0*u[k][2] + 3.0*u[k][2]*u[k][2] - 1.5*u[k][1]*u[k][1] - 1.5*u[k][0]*u[k][0]);
  
  gamma6 = t1*(1.0 - 3.0*u[k][2] + 3.0*u[k][2]*u[k][2] - 1.5*u[k][1]*u[k][1] - 1.5*u[k][0]*u[k][0]);
  
  gamma7 = t2*(1.0+3.0*(u[k][0]+u[k][1]+u[k][0]*u[k][0]+u[k][1]*u[k][1])+9.0*u[k][0]*u[k][1] - 1.5*u[k][2]*u[k][2]);
  
  gamma8 = t2*(1.0+3.0*(-u[k][0]+u[k][1]+u[k][0]*u[k][0]+u[k][1]*u[k][1])-9.0*u[k][0]*u[k][1] - 1.5*u[k][2]*u[k][2]);
  
  gamma10 = t2*(1.0+3.0*(-u[k][0]-u[k][1]+u[k][0]*u[k][0]+u[k][1]*u[k][1])+9.0*u[k][0]*u[k][1] - 1.5*u[k][2]*u[k][2]);
  
  gamma9 = t2*(1.0+3.0*(u[k][0]-u[k][1]+u[k][0]*u[k][0]+u[k][1]*u[k][1])-9.0*u[k][0]*u[k][1] - 1.5*u[k][2]*u[k][2]);
	
  gamma11 = t2*(1.0+3.0*(u[k][1]+u[k][2]+u[k][1]*u[k][1]+u[k][2]*u[k][2])+9.0*u[k][1]*u[k][2] - 1.5*u[k][0]*u[k][0]);

  gamma12 = t2*(1.0+3.0*(-u[k][1]+u[k][2]+u[k][1]*u[k][1]+u[k][2]*u[k][2])-9.0*u[k][1]*u[k][2] - 1.5*u[k][0]*u[k][0]);

  gamma13 = t2*(1.0+3.0*(u[k][1]-u[k][2]+u[k][1]*u[k][1]+u[k][2]*u[k][2])-9.0*u[k][1]*u[k][2] - 1.5*u[k][0]*u[k][0]);

  gamma14 = t2*(1.0+3.0*(-u[k][1]-u[k][2]+u[k][1]*u[k][1]+u[k][2]*u[k][2])+9.0*u[k][1]*u[k][2] - 1.5*u[k][0]*u[k][0]);

  gamma15 = t2*(1.0+3.0*(u[k][0]+u[k][2]+u[k][0]*u[k][0]+u[k][2]*u[k][2])+9.0*u[k][0]*u[k][2] - 1.5*u[k][1]*u[k][1]);
	
  gamma16 = t2*(1.0+3.0*(-u[k][0]+u[k][2]+u[k][0]*u[k][0]+u[k][2]*u[k][2])-9.0*u[k][0]*u[k][2] - 1.5*u[k][1]*u[k][1]);

  gamma17 = t2*(1.0+3.0*(u[k][0]-u[k][2]+u[k][0]*u[k][0]+u[k][2]*u[k][2])-9.0*u[k][0]*u[k][2] - 1.5*u[k][1]*u[k][1]);

  gamma18 = t2*(1.0+3.0*(-u[k][0]-u[k][2]+u[k][0]*u[k][0]+u[k][2]*u[k][2])+9.0*u[k][0]*u[k][2] - 1.5*u[k][1]*u[k][1]);
			

	if(mask[k]==0)
	{
		/*M0=M*(muh[d[k][6]]+muh[d[k][7]]+muh[d[k][8]]+muh[d[k][9]]+4.0*muh[d[k][0]]
		+4.0*muh[d[k][1]]+4.0*muh[d[k][2]]+4.0*muh[d[k][3]]-20.0*muh[k])/(6.0*dt*dt);*/
		M0=0.0;//M*(muh[d[k][6]]+muh[d[k][7]]+muh[d[k][8]]+muh[d[k][9]]+muh[d[k][10]]+muh[d[k][11]]+muh[d[k][12]]+muh[d[k][13]]+muh[d[k][14]]+muh[d[k][15]]+muh[d[k][16]]+muh[d[k][17]]+2.0*(muh[d[k][0]]+muh[d[k][1]]+muh[d[k][2]]+muh[d[k][3]]+muh[d[k][4]]+muh[d[k][5]])-24.0*muh[k])/(6.0*dt*dt);

	}
	/*
	else if(mask[k]==1)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][1]][1]]+4*C[d[k][1]]);
		
		h[k][2]=h[k][1];
		h[k][10]=h[k][7];
		h[k][8]=h[k][9];
		//h[k][0]+=h[d[k][0]][1]+h[d[k][6]][7]+h[d[k][8]][9]-h[k][2]-h[k][8]-h[k][10];
		
		g[k][2]=g[k][1];
		g[k][10]=g[k][7];
		g[k][8]=g[k][9];
		//g[k][0]+=g[d[k][0]][1]+g[d[k][6]][7]+g[d[k][8]][9]-g[k][2]-g[k][8]-g[k][10];
		
		M0=1.0/3.0*M*(muh[d[k][7]] + muh[d[k][9]] + 4.0*muh[d[k][1]]
	 + 2.0*muh[d[k][2]] + 2.0*muh[d[k][3]] - 10.0*muh[k]);
	}
	
	else if(mask[k]==2)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][1]=h[k][2];
		h[k][7]=h[k][10];
		h[k][9]=h[k][8];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][1]=g[k][2];
		g[k][7]=g[k][10];
		g[k][9]=g[k][8];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];
		
		M0=1.0/3.0*M*(muh[d[k][6]] + muh[d[k][8]] + 4.0*muh[d[k][0]]
	+2.0*muh[d[k][2]] + 2.0*muh[d[k][3]] - 10.0*muh[k]);

		
	}
	
	else if(mask[k]==3)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][4]=h[k][3];
		h[k][9]=h[k][8];
		h[k][10]=h[k][7];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][4]=g[k][3];
		g[k][9]=g[k][8];
		g[k][10]=g[k][7];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];
		
		M0=1.0/3.0*M*(muh[d[k][8]] + muh[d[k][9]] + 4.0*muh[d[k][3]]
	+2.0*muh[d[k][0]] + 2.0*muh[d[k][1]] - 10.0*muh[k]);

		
	}
	
	else if(mask[k]==4)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][3]=h[k][4];
		h[k][7]=h[k][10];
		h[k][8]=h[k][9];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][3]=g[k][4];
		g[k][7]=g[k][10];
		g[k][8]=g[k][9];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];
		
		M0=1.0/3.0*M*(muh[d[k][6]] + muh[d[k][7]] + 4.0*muh[d[k][2]]
	+2.0*muh[d[k][0]] + 2.0*muh[d[k][1]] - 10.0*muh[k]);

		
	}
	
	else if(mask[k]==7)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][10]=h[k][7];
		
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][10]=g[k][7];
		
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];
		
		M0=1.0/6.0*M*(muh[d[k][8]] + 2.0*muh[d[k][9]] + muh[d[k][7]]+ 4.0*muh[d[k][3]] + 4.0*muh[d[k][2]]
	+4.0*muh[d[k][0]] + 4.0*muh[d[k][1]] - 20.0*muh[k]);

		
	}
	else if(mask[k]==8)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][9]=h[k][8];
		
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][9]=g[k][8];
		
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		M0=1.0/6.0*M*(2.0*muh[d[k][8]] + muh[d[k][9]] + muh[d[k][6]]+ 4.0*muh[d[k][3]] + 4.0*muh[d[k][2]]
	+4.0*muh[d[k][0]] + 4.0*muh[d[k][1]] - 20.0*muh[k]);
		
	}
	
	else if(mask[k]==9)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][8]=h[k][9];
		
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][8]=g[k][9];
		
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];
		
		M0=1.0/6.0*M*(muh[d[k][6]] + 2.0*muh[d[k][7]] + muh[d[k][9]]+ 4.0*muh[d[k][3]] + 4.0*muh[d[k][2]]
	+4.0*muh[d[k][0]] + 4.0*muh[d[k][1]] - 20.0*muh[k]);

		
	}
	
	else if(mask[k]==10)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][7]=h[k][10];
		
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][7]=g[k][10];
		
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		M0=1.0/6.0*M*(muh[d[k][8]] + 2.0*muh[d[k][6]] + muh[d[k][7]]+ 4.0*muh[d[k][3]] + 4.0*muh[d[k][2]]
	+4.0*muh[d[k][0]] + 4.0*muh[d[k][1]] - 20.0*muh[k]);
	}
	*/
	
	/*
	else if(mask[k]==27)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][2]=h[k][1];
		h[k][10]=h[k][7];
		
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][2]=g[k][1];
		g[k][10]=g[k][7];
		
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	else if(mask[k]==29)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][2]=h[k][1];
		h[k][8]=h[k][9];
		
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][2]=g[k][1];
		g[k][8]=g[k][9];
		
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	
	else if(mask[k]==38)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][1]=h[k][2];
		h[k][9]=h[k][8];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][1]=g[k][2];
		g[k][9]=g[k][8];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	
	else if(mask[k]==40)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][1]=h[k][2];
		h[k][7]=h[k][10];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][1]=g[k][2];
		g[k][7]=g[k][10];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	else if(mask[k]==47)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][4]=h[k][3];
		h[k][10]=h[k][7];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][4]=g[k][3];
		g[k][10]=g[k][7];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	
	else if(mask[k]==48)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][4]=h[k][3];
		h[k][9]=h[k][8];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][4]=g[k][3
		g[k][9]=g[k][8];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	
	else if(mask[k]==59)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][3]=h[k][4];
		h[k][8]=h[k][9];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][3]=g[k][4];
		g[k][8]=g[k][9];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	
	else if(mask[k]==60)
	{
		//Chold=1.0/3.0*(-2*dC-C[d[d[k][0]][0]]+4*C[d[k][0]]);
		
		h[k][3]=h[k][4];
		h[k][7]=h[k][10];
		//h[k][0]+=h[d[k][1]][2]+h[d[k][7]][8]+h[d[k][9]][10]-h[k][1]-h[k][7]-h[k][9];

		
		g[k][3]=g[k][4];
		g[k][7]=g[k][10];
		//g[k][0]+=g[d[k][1]][2]+g[d[k][7]][8]+g[d[k][9]][10]-g[k][1]-g[k][7]-g[k][9];

		
	}
	*/
	
	
/*
if (mask[k]==0)
{
M0=M*(muh[d[k][6]]+muh[d[k][7]]+muh[d[k][8]]+muh[d[k][9]]+4.0*muh[d[k][0]]
		+4.0*muh[d[k][1]]+4.0*muh[d[k][2]]+4.0*muh[d[k][3]]-20.0*muh[k])/(6.0*dt*dt);
}		
	else	if(mask[k]==1)
	
	{
		M0=1.0/3.0*M*(muh[d[k][7]] + muh[d[k][9]] + 4.0*muh[d[k][1]]
	 + 2.0*muh[d[k][2]] + 2.0*muh[d[k][3]] - 10.0*muh[k]);
		
	
	}
	
	else if(mask[k]==2)
	
	{
		M0=1.0/3.0*M*(muh[d[k][6]] + muh[d[k][8]] + 4.0*muh[d[k][0]]
	+2.0*muh[d[k][2]] + 2.0*muh[d[k][3]] - 10.0*muh[k]);
		
	}
	
	else if(mask[k]==3)
	
	{
		M0=1.0/3.0*M*(muh[d[k][8]] + muh[d[k][9]] + 4.0*muh[d[k][3]]
	+2.0*muh[d[k][0]] + 2.0*muh[d[k][1]] - 10.0*muh[k]);
		
	}
*/


h[k][0]+=dt*0.5*M0*gamma0;
h[k][1]+=dt*0.5*M0*gamma1;
h[k][2]+=dt*0.5*M0*gamma2;
h[k][3]+=dt*0.5*M0*gamma3;
h[k][4]+=dt*0.5*M0*gamma4;
h[k][5]+=dt*0.5*M0*gamma5;
h[k][6]+=dt*0.5*M0*gamma6;
h[k][7]+=dt*0.5*M0*gamma7;
h[k][8]+=dt*0.5*M0*gamma8;
h[k][9]+=dt*0.5*M0*gamma9;
h[k][10]+=dt*0.5*M0*gamma10;
h[k][11]+=dt*0.5*M0*gamma11;
h[k][12]+=dt*0.5*M0*gamma12;
h[k][13]+=dt*0.5*M0*gamma13;
h[k][14]+=dt*0.5*M0*gamma14;
h[k][15]+=dt*0.5*M0*gamma15;
h[k][16]+=dt*0.5*M0*gamma16;
h[k][17]+=dt*0.5*M0*gamma17;
h[k][18]+=dt*0.5*M0*gamma18;


}